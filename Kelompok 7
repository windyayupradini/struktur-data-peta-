class Peta:
    def __init__(self):
        self.cityList = {}
    
    def printPeta(self):
        for kota in self.cityList:
            print(kota, ":", self.cityList[kota])
        
    def tambahkanKota(self, kota):
        if kota not in self.cityList:
            self.cityList[kota] = []
            return True
        return False
    
    def hapusKota(self, kotaDihapus):
        if kotaDihapus in self.cityList:
            for kotalain in self.cityList:
                if kotaDihapus in self.cityList[kotalain]:
                    self.cityList[kotalain].remove(kotaDihapus)
            del self.cityList[kotaDihapus]
            return True
        return False
    
    def tambahkanJalan(self, kota1, kota2):
        if kota1 in self.cityList and kota2 in self.cityList:
            if len(self.cityList[kota1]) < 10 and len(self.cityList[kota2]) < 10:
                self.cityList[kota2].append(kota1)
                self.cityList[kota1].append(kota2)
                return True
        return False
    
    def hapusJalan(self, kota1, kota2):
        if kota1 in self.cityList and kota2 in self.cityList:
            self.cityList[kota2].remove(kota1)
            self.cityList[kota1].remove(kota2)
            return True
        return False

peta_indonesia = Peta()
peta_indonesia.tambahkanKota("Surabaya")
peta_indonesia.tambahkanKota("Gresik")
peta_indonesia.tambahkanKota("Sidoarjo")
peta_indonesia.tambahkanKota("Lamongan")
peta_indonesia.tambahkanKota("Mojokerto")
peta_indonesia.tambahkanKota("Pasuruan")
peta_indonesia.tambahkanKota("Kediri")
peta_indonesia.tambahkanKota("Nganjuk")
peta_indonesia.tambahkanKota("Malang")
peta_indonesia.tambahkanKota("Jombang")

for kota1 in peta_indonesia.cityList:
    for kota2 in peta_indonesia.cityList:
        if kota1 != kota2:
            peta_indonesia.tambahkanJalan(kota1, kota2)

peta_indonesia.printPeta()
print('------------------------------')
peta_indonesia.hapusKota("Jombang")
peta_indonesia.printPeta()
